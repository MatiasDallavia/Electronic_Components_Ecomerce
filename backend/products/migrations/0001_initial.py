# Generated by Django 5.0 on 2024-01-07 20:36

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="BJT",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True, max_length=55, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "mounting_technology",
                    models.CharField(
                        choices=[
                            ("SMD", "Surface Mount Device(SMD)"),
                            ("THT", "Through-Hole Technology(THT)"),
                        ],
                        default="THT",
                    ),
                ),
                ("operating_temperature", models.FloatField()),
                ("amount_available", models.IntegerField()),
                (
                    "manufacturer",
                    models.CharField(
                        choices=[
                            ("Fairchild", "Fairchild"),
                            ("Infineon", "Infineon"),
                            ("Texas Instruments", "Texas Instruments"),
                            ("Siemens", "Siemens"),
                            ("Samsung", "Samsung"),
                        ],
                        default="Fairchild",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "package",
                    models.CharField(
                        choices=[
                            ("TO-5", "TO-5"),
                            ("TO-92", "TO-92"),
                            ("TO-220", "TO-220"),
                        ],
                        default="TO-5",
                    ),
                ),
                ("bjt_type", models.CharField(choices=[("NPM", "NPN")], default="NPM")),
                ("ic_max", models.FloatField()),
                ("vce_saturation", models.FloatField()),
                ("dc_current_gain", models.FloatField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Capacitor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True, max_length=55, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "mounting_technology",
                    models.CharField(
                        choices=[
                            ("SMD", "Surface Mount Device(SMD)"),
                            ("THT", "Through-Hole Technology(THT)"),
                        ],
                        default="THT",
                    ),
                ),
                ("operating_temperature", models.FloatField()),
                ("amount_available", models.IntegerField()),
                (
                    "manufacturer",
                    models.CharField(
                        choices=[
                            ("Fairchild", "Fairchild"),
                            ("Infineon", "Infineon"),
                            ("Texas Instruments", "Texas Instruments"),
                            ("Siemens", "Siemens"),
                            ("Samsung", "Samsung"),
                        ],
                        default="Fairchild",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "package",
                    models.CharField(
                        choices=[("Bulk", "Bulk"), ("103", "103"), ("104", "104")],
                        default="Bulk",
                    ),
                ),
                (
                    "capacitor_type",
                    models.CharField(
                        choices=[
                            ("CERAMIC", "Ceramic Capacitor"),
                            ("FILM", "Film Capacitor"),
                            ("ELECTROLYTIC", "Electrolytic Capacitor"),
                        ],
                        default="ELECTROLYTIC",
                    ),
                ),
                ("capacitance", models.FloatField()),
                ("tolerance", models.FloatField()),
                ("voltage", models.FloatField()),
                ("esr", models.FloatField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Diode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True, max_length=55, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "mounting_technology",
                    models.CharField(
                        choices=[
                            ("SMD", "Surface Mount Device(SMD)"),
                            ("THT", "Through-Hole Technology(THT)"),
                        ],
                        default="THT",
                    ),
                ),
                ("operating_temperature", models.FloatField()),
                ("amount_available", models.IntegerField()),
                (
                    "manufacturer",
                    models.CharField(
                        choices=[
                            ("Fairchild", "Fairchild"),
                            ("Infineon", "Infineon"),
                            ("Texas Instruments", "Texas Instruments"),
                            ("Siemens", "Siemens"),
                            ("Samsung", "Samsung"),
                        ],
                        default="Fairchild",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "package",
                    models.CharField(
                        choices=[
                            ("DO-41", "DO-41"),
                            ("DO-35", "DO-35"),
                            ("SOD-123", "SOD-123"),
                            ("SOD-80", "SOD-80"),
                        ],
                        default="DO-41",
                    ),
                ),
                (
                    "diode_type",
                    models.CharField(
                        choices=[
                            ("SCHOTTKY", "Schottky Diode"),
                            ("RECTIFIER", "Rectifier Diode"),
                            ("ZENER", "Zener Diode"),
                        ],
                        default="SCHOTTKY",
                    ),
                ),
                ("dc_reverse", models.FloatField()),
                ("current", models.FloatField()),
                ("reverse_recovery", models.FloatField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="IGBT",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True, max_length=55, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "mounting_technology",
                    models.CharField(
                        choices=[
                            ("SMD", "Surface Mount Device(SMD)"),
                            ("THT", "Through-Hole Technology(THT)"),
                        ],
                        default="THT",
                    ),
                ),
                ("operating_temperature", models.FloatField()),
                ("amount_available", models.IntegerField()),
                (
                    "manufacturer",
                    models.CharField(
                        choices=[
                            ("Fairchild", "Fairchild"),
                            ("Infineon", "Infineon"),
                            ("Texas Instruments", "Texas Instruments"),
                            ("Siemens", "Siemens"),
                            ("Samsung", "Samsung"),
                        ],
                        default="Fairchild",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "package",
                    models.CharField(
                        choices=[("TO-220fp", "TO-220fp"), ("TO-264", "TO-264")],
                        default="TO-220fp",
                    ),
                ),
                ("vc", models.FloatField()),
                ("ic", models.FloatField()),
                ("vce_on", models.FloatField()),
                ("power_max", models.FloatField()),
                ("td", models.FloatField()),
                ("gc", models.FloatField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Inductor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True, max_length=55, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "mounting_technology",
                    models.CharField(
                        choices=[
                            ("SMD", "Surface Mount Device(SMD)"),
                            ("THT", "Through-Hole Technology(THT)"),
                        ],
                        default="THT",
                    ),
                ),
                ("operating_temperature", models.FloatField()),
                ("amount_available", models.IntegerField()),
                (
                    "manufacturer",
                    models.CharField(
                        choices=[
                            ("Fairchild", "Fairchild"),
                            ("Infineon", "Infineon"),
                            ("Texas Instruments", "Texas Instruments"),
                            ("Siemens", "Siemens"),
                            ("Samsung", "Samsung"),
                        ],
                        default="Fairchild",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "package",
                    models.CharField(
                        choices=[
                            ("2220", "2220"),
                            ("330", "330"),
                            ("101", "101"),
                            ("DIL", "DIL"),
                        ],
                        default="DIL",
                    ),
                ),
                (
                    "inductor_type",
                    models.CharField(
                        choices=[
                            ("SOLENOID", "Solenoid Inductor"),
                            ("TOROID", "Toroid Inductor"),
                        ],
                        default="SOLENOID",
                    ),
                ),
                (
                    "core_material",
                    models.CharField(
                        choices=[
                            ("AIR", "Air Core"),
                            ("FERRITE", "Ferrite Core"),
                            ("ALLOY", "Alloy Core"),
                        ],
                        default="FERRITE",
                    ),
                ),
                ("inductance", models.FloatField()),
                ("current", models.FloatField()),
                ("vr", models.FloatField()),
                ("rr", models.FloatField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MOSFET",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True, max_length=55, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "mounting_technology",
                    models.CharField(
                        choices=[
                            ("SMD", "Surface Mount Device(SMD)"),
                            ("THT", "Through-Hole Technology(THT)"),
                        ],
                        default="THT",
                    ),
                ),
                ("operating_temperature", models.FloatField()),
                ("amount_available", models.IntegerField()),
                (
                    "manufacturer",
                    models.CharField(
                        choices=[
                            ("Fairchild", "Fairchild"),
                            ("Infineon", "Infineon"),
                            ("Texas Instruments", "Texas Instruments"),
                            ("Siemens", "Siemens"),
                            ("Samsung", "Samsung"),
                        ],
                        default="Fairchild",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "package",
                    models.CharField(
                        choices=[("TO-220", "TO-220fp"), ("TO-220fp", "TO-220")],
                        default="TO-220fp",
                    ),
                ),
                ("dsv", models.FloatField()),
                ("drive_voltage", models.FloatField()),
                ("rds_on", models.FloatField()),
                ("vgs", models.FloatField()),
                ("input_capacitance", models.FloatField()),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Resistor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("model", models.CharField(max_length=20)),
                ("description", models.TextField(blank=True, max_length=55, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "mounting_technology",
                    models.CharField(
                        choices=[
                            ("SMD", "Surface Mount Device(SMD)"),
                            ("THT", "Through-Hole Technology(THT)"),
                        ],
                        default="THT",
                    ),
                ),
                ("operating_temperature", models.FloatField()),
                ("amount_available", models.IntegerField()),
                (
                    "manufacturer",
                    models.CharField(
                        choices=[
                            ("Fairchild", "Fairchild"),
                            ("Infineon", "Infineon"),
                            ("Texas Instruments", "Texas Instruments"),
                            ("Siemens", "Siemens"),
                            ("Samsung", "Samsung"),
                        ],
                        default="Fairchild",
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "package",
                    models.CharField(
                        choices=[
                            ("AXIAL", "AXIAL"),
                            ("0402", "P0402"),
                            ("0603", "0603"),
                        ],
                        default="AXIAL",
                    ),
                ),
                (
                    "resistor_type",
                    models.CharField(
                        choices=[
                            ("CARBON", "Carbon Resistor"),
                            ("FILM", "Film Resistor"),
                        ],
                        default="CARBON",
                    ),
                ),
                ("resistance", models.FloatField()),
                ("tolerance", models.FloatField()),
                ("power", models.FloatField()),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
